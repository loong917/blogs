---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { getCollection } from "astro:content";

const blogs = await getCollection("blogs");
const uniqueTags = [...new Set(blogs.map((blog) => blog.data.tags).flat())];
let groupBlogs = uniqueTags.map((tag) => {
    const filterBlogs = blogs.filter((blog) => blog.data.tags.includes(tag));
    return {
        tag: tag,
        blogs: filterBlogs,
    };
});
---

<Layout title="loong博客">
    <main>
        <Header title="loong博客" />
        <h1 class="mb-12 text-2xl font-serif italic sm:mb-16 sm:text-4xl">
            全部标签
        </h1>
        {
            groupBlogs.map((blog) => {
                return (
                    <a
                        class="mb-10 flex justify-between items-start gap-8 group sm:mb-12"
                        href={`/tags/${blog.tag}`}
                    >
                        <div class="grow">
                            <h2 class="text-xl leading-tight font-serif font-medium group-hover:underline group-hover:decoration-dashed group-hover:underline-offset-4 group-hover:decoration-1 sm:text-2xl">
                                {blog.tag}
                            </h2>
                            <div class="mt-1 text-sm leading-normal">
                                {blog.blogs.length}
                            </div>
                        </div>
                        <div class="hidden font-serif italic opacity-0 transition group-hover:opacity-100 sm:inline-flex sm:gap-1 sm:items-center sm:shrink-0">
                            View Tag Archive
                        </div>
                    </a>
                );
            })
        }
        <Footer />
    </main>
</Layout>

<style>
    main {
        margin: auto;
        padding: 1rem;
        width: 1024px;
        max-width: calc(100% - 2rem);
    }
    .astro-a {
        position: absolute;
        top: -32px;
        left: 50%;
        transform: translatex(-50%);
        width: 220px;
        height: auto;
        z-index: -1;
    }
    h1 {
        font-size: 4rem;
        font-weight: 700;
        line-height: 1;
        text-align: center;
        margin-bottom: 1em;
    }
    .text-gradient {
        background-image: var(--accent-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-size: 400%;
        background-position: 0%;
    }
    .instructions {
        margin-bottom: 2rem;
        border: 1px solid rgba(var(--accent-light), 25%);
        background: linear-gradient(
            rgba(var(--accent-dark), 66%),
            rgba(var(--accent-dark), 33%)
        );
        padding: 1.5rem;
        border-radius: 8px;
    }
    .instructions code {
        font-size: 0.8em;
        font-weight: bold;
        background: rgba(var(--accent-light), 12%);
        color: rgb(var(--accent-light));
        border-radius: 4px;
        padding: 0.3em 0.4em;
    }
    .instructions strong {
        color: rgb(var(--accent-light));
    }
    .link-card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
        gap: 2rem;
        padding: 0;
        margin-top: 2rem;
    }
</style>
