---
import type { TransitionAnimationValue } from "astro";

interface Props {
    id: number;
    title: string;
    date: string;
    tag: string;
    mediaTransitionName?: string;
    mediaTransitionAnimate?: TransitionAnimationValue;
}

const {
    id,
    title,
    date,
    tag,
    mediaTransitionName = "none",
    mediaTransitionAnimate = "fade",
} = Astro.props;
---

<li
    class="link-card"
    transition:name={mediaTransitionName}
    transition:animate={mediaTransitionAnimate}
>
    <a
        class="link"
        style={`--bgURL: url('/${tag}.svg');`}
        href={`/blogs/${id}`}
    >
        <h3 class="title">
            {title}
        </h3>
        <time class="time"> {date}</time>
    </a>
    <style>
        .link-card {
            list-style: none;
            display: flex;
            padding: 1px;
            background-color: #23262d;
            background-image: none;
            background-size: 400%;
            border-radius: 7px;
            background-position: 100%;
            transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
            box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
        }

        .link-card > a {
            width: 100%;
            text-decoration: none;
            line-height: 1.4;
            padding: calc(1.5rem - 1px);
            border-radius: 8px;
            color: white;
            background-color: #23262d;
            opacity: 0.8;
        }

        h2 {
            margin: 0;
            font-size: 1.25rem;
            transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
        }

        p {
            margin-top: 0.5rem;
            margin-bottom: 0;
        }

        .link-card:is(:hover, :focus-within) {
            background-position: 0;
            background-image: var(--accent-gradient);
        }

        .link-card:is(:hover, :focus-within) h2 {
            color: rgb(var(--accent-light));
        }

        .link {
            align-items: center;
            background-color: #212432;
            border-radius: 5px;
            box-sizing: border-box;
            contain: paint;
            display: flex;
            flex-direction: column;
            height: 100%;
            justify-content: center;
            padding: 1.5rem 2rem;
            row-gap: 1.25rem;
        }

        .link::before {
            background: 50% / contain no-repeat var(--bgURL);
            content: "";
            filter: opacity(0.95);
            height: 50px;
            width: 62.5px;
        }

        .title {
            color: #e4ebf0;
            font-size: 1.2rem;
            font-weight: 700;
            line-height: 1.6;
            margin-bottom: 0;
            margin-top: 0;
            text-align: center;
            word-break: auto-phrase;
        }

        .time {
            align-items: center;
            color: #9194a4;
            column-gap: 0.5em;
            display: flex;
            font-size: 0.85rem;
        }

        .time:before {
            font-size: 0.85em;
            line-height: 1;
            height: 1em;
            width: 1em;
            content: url(data:image/svg+xml;charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2024%2024%22%3E%3Cpath%20d%3D%22M12.1%2024c-1.7%200-3.2-.3-4.7-1s-2.8-1.5-3.9-2.6-2-2.4-2.6-3.8-.9-3-.9-4.7.3-3.2.9-4.7%201.5-2.7%202.6-3.8S5.9%201.5%207.4.9s3-.9%204.7-.9c1.8%200%203.5.4%205%201.2s3%201.8%204.1%203.2V.8h2v6.9h-7v-2h3.5c-1-1.1-2.1-2-3.4-2.7-1.3-.7-2.7-1-4.2-1C9.3%202%206.9%203%205%204.8s-3%204.2-3%207S3%2017%204.9%2019s4.3%203%207.2%203c2.8%200%205.1-1%207-2.9S22%2014.7%2022%2012h2c0%203.3-1.2%206.2-3.5%208.5S15.4%2024%2012.1%2024zm4.1-6.6-5.2-5V5.2h2v6.3l4.6%204.5-1.4%201.4z%22%20fill%3D%22%239194a4%22%2F%3E%3C%2Fsvg%3E);
        }
    </style>
</li>
